name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.3'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Run tests
      run: flutter test
    
    - name: Run linter
      run: flutter analyze

  build-android:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.3'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Build APK
      run: flutter build apk --release
    
    - name: Build AAB
      run: flutter build appbundle --release
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apk
        path: build/app/outputs/flutter-apk/app-release.apk
    
    - name: Upload AAB
      uses: actions/upload-artifact@v4
      with:
        name: app-release-aab
        path: build/app/outputs/bundle/release/app-release.aab

  build-web:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.3'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Build Web
      run: flutter build web --release
    
    - name: Upload Web Build
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: build/web

  build-ios:
    needs: test
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.3'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Build iOS
      run: flutter build ios --release --no-codesign
    
    - name: Upload iOS Build
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: build/ios

  deploy:
    needs: [build-android, build-web, build-ios]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # Add your deployment logic here
    
    - name: Notify deployment
      run: |
        echo "Deployment completed successfully!"
        # Add notification logic here (Slack, email, etc.)



