import 'package:event_marketplace_app/main.dart' as app;
import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:flutter_test/flutter_test.dart';

void main() {
  group('–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏', () {
    testWidgets('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ', (tester) async {
      await tester.pumpWidget(
        const ProviderScope(
          child: MaterialApp(
            home: app.EventMarketplaceApp(),
          ),
        ),
      );

      await tester.pumpAndSettle();

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      expect(
        find.text('–ù–∞–π–¥–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –¥–ª—è —Å–≤–æ–µ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞ üéâ'),
        findsOneWidget,
      );

      // –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
      await tester.pageBack();
      await tester.pumpAndSettle();

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–∫—Ä—ã–ª–æ—Å—å (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–≤–æ–π–Ω–æ–º –Ω–∞–∂–∞—Ç–∏–∏)
      final backMessage = find.text('–ù–∞–∂–º–∏—Ç–µ ¬´–ù–∞–∑–∞–¥¬ª –µ—â—ë —Ä–∞–∑, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏');
      expect(backMessage, findsOneWidget);
    });

    testWidgets('–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏', (tester) async {
      await tester.pumpWidget(
        const ProviderScope(
          child: MaterialApp(
            home: app.EventMarketplaceApp(),
          ),
        ),
      );

      await tester.pumpAndSettle();

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      expect(find.text('–ì–ª–∞–≤–Ω–∞—è'), findsOneWidget);
      expect(find.text('–õ–µ–Ω—Ç–∞'), findsOneWidget);
      expect(find.text('–ó–∞—è–≤–∫–∏'), findsOneWidget);
      expect(find.text('–ß–∞—Ç—ã'), findsOneWidget);
      expect(find.text('–ü—Ä–æ—Ñ–∏–ª—å'), findsOneWidget);
    });

    testWidgets('–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω –ø–æ–∏—Å–∫–∞', (tester) async {
      await tester.pumpWidget(
        const ProviderScope(
          child: MaterialApp(
            home: app.EventMarketplaceApp(),
          ),
        ),
      );

      await tester.pumpAndSettle();

      // –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ" –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø–æ–∏—Å–∫–∞
      final showAllButton = find.textContaining('–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ');
      if (showAllButton.evaluate().isNotEmpty) {
        await tester.tap(showAllButton.first);
        await tester.pumpAndSettle();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ —ç–∫—Ä–∞–Ω –ø–æ–∏—Å–∫–∞
        expect(find.text('–ù–∞–π–¥–∏ —Å–≤–æ–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ üéØ'), findsOneWidget);
      }
    });
  });
}
