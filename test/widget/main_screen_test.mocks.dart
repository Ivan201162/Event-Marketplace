// Mocks generated by Mockito 5.4.6 from annotations
// in event_marketplace_app/test/widget/main_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:event_marketplace_app/models/user.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeDateTime_0 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppUser_1 extends _i1.SmartFake implements _i2.AppUser {
  _FakeAppUser_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AppUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppUser extends _i1.Mock implements _i2.AppUser {
  MockAppUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#id),
        ),
      ) as String);

  @override
  String get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#email),
        ),
      ) as String);

  @override
  _i2.UserRole get role => (super.noSuchMethod(
        Invocation.getter(#role),
        returnValue: _i2.UserRole.customer,
      ) as _i2.UserRole);

  @override
  DateTime get createdAt => (super.noSuchMethod(
        Invocation.getter(#createdAt),
        returnValue: _FakeDateTime_0(
          this,
          Invocation.getter(#createdAt),
        ),
      ) as DateTime);

  @override
  bool get isActive => (super.noSuchMethod(
        Invocation.getter(#isActive),
        returnValue: false,
      ) as bool);

  @override
  bool get anniversaryRemindersEnabled => (super.noSuchMethod(
        Invocation.getter(#anniversaryRemindersEnabled),
        returnValue: false,
      ) as bool);

  @override
  String get displayNameOrEmail => (super.noSuchMethod(
        Invocation.getter(#displayNameOrEmail),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#displayNameOrEmail),
        ),
      ) as String);

  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#uid),
        ),
      ) as String);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  bool get isBanned => (super.noSuchMethod(
        Invocation.getter(#isBanned),
        returnValue: false,
      ) as bool);

  @override
  bool get isVerified => (super.noSuchMethod(
        Invocation.getter(#isVerified),
        returnValue: false,
      ) as bool);

  @override
  List<String> get specialties => (super.noSuchMethod(
        Invocation.getter(#specialties),
        returnValue: <String>[],
      ) as List<String>);

  @override
  bool get isSpecialist => (super.noSuchMethod(
        Invocation.getter(#isSpecialist),
        returnValue: false,
      ) as bool);

  @override
  bool get isCustomer => (super.noSuchMethod(
        Invocation.getter(#isCustomer),
        returnValue: false,
      ) as bool);

  @override
  bool get isGuest => (super.noSuchMethod(
        Invocation.getter(#isGuest),
        returnValue: false,
      ) as bool);

  @override
  bool get isAdmin => (super.noSuchMethod(
        Invocation.getter(#isAdmin),
        returnValue: false,
      ) as bool);

  @override
  String get roleDisplayName => (super.noSuchMethod(
        Invocation.getter(#roleDisplayName),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#roleDisplayName),
        ),
      ) as String);

  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i2.AppUser copyWith({
    String? id,
    String? email,
    String? displayName,
    String? photoURL,
    _i2.UserRole? role,
    DateTime? createdAt,
    DateTime? lastLoginAt,
    bool? isActive,
    String? socialProvider,
    String? socialId,
    Map<String, dynamic>? additionalData,
    _i2.MaritalStatus? maritalStatus,
    DateTime? weddingDate,
    String? partnerName,
    bool? anniversaryRemindersEnabled,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #email: email,
            #displayName: displayName,
            #photoURL: photoURL,
            #role: role,
            #createdAt: createdAt,
            #lastLoginAt: lastLoginAt,
            #isActive: isActive,
            #socialProvider: socialProvider,
            #socialId: socialId,
            #additionalData: additionalData,
            #maritalStatus: maritalStatus,
            #weddingDate: weddingDate,
            #partnerName: partnerName,
            #anniversaryRemindersEnabled: anniversaryRemindersEnabled,
          },
        ),
        returnValue: _FakeAppUser_1(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #email: email,
              #displayName: displayName,
              #photoURL: photoURL,
              #role: role,
              #createdAt: createdAt,
              #lastLoginAt: lastLoginAt,
              #isActive: isActive,
              #socialProvider: socialProvider,
              #socialId: socialId,
              #additionalData: additionalData,
              #maritalStatus: maritalStatus,
              #weddingDate: weddingDate,
              #partnerName: partnerName,
              #anniversaryRemindersEnabled: anniversaryRemindersEnabled,
            },
          ),
        ),
      ) as _i2.AppUser);
}
