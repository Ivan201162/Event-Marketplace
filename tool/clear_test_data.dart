import 'dart:io';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_core/firebase_core.dart';

/// –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ Firestore
/// –ó–∞–ø—É—Å–∫: dart tool/clear_test_data.dart
Future<void> main() async {
  print('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase...');
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
  await Firebase.initializeApp();
  
  final firestore = FirebaseFirestore.instance;
  
  print('üßπ –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—Å–µ—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π
    final collections = ['users', 'feed', 'orders', 'chats', 'ideas'];
    
    for (final collection in collections) {
      print('üìÇ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: $collection');
      
      final querySnapshot = await firestore
          .collection(collection)
          .where('isTest', isEqualTo: true)
          .get();
      
      print('  –ù–∞–π–¥–µ–Ω–æ ${querySnapshot.docs.length} —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤');
      
      for (final doc in querySnapshot.docs) {
        if (collection == 'chats') {
          // –î–ª—è —á–∞—Ç–æ–≤ —É–¥–∞–ª—è–µ–º —Ç–∞–∫–∂–µ —Å–æ–æ–±—â–µ–Ω–∏—è
          final messagesSnapshot = await doc.reference
              .collection('messages')
              .get();
          
          print('    –£–¥–∞–ª–µ–Ω–∏–µ ${messagesSnapshot.docs.length} —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —á–∞—Ç–∞ ${doc.id}');
          
          for (final messageDoc in messagesSnapshot.docs) {
            await messageDoc.reference.delete();
          }
        }
        
        await doc.reference.delete();
        print('    –£–¥–∞–ª–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç: ${doc.id}');
      }
      
      print('  ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ $collection');
    }
    
    print('‚úÖ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –∏–∑ Firestore!');
    
  } catch (e) {
    print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: $e');
    exit(1);
  }
  
  exit(0);
}

