# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false
  language:
    strict-inference: true
    strict-raw-types: true
  errors:
    # преврати предупреждения в ошибки, чтобы добиться "полного нуля"
    unused_import: error
    dead_code: error
    missing_required_param: error
    missing_return: error
    parameter_assignments: error
    invalid_use_of_visible_for_testing_member: error
    invalid_use_of_protected_member: error
    invalid_use_of_internal_member: error
    deprecated_member_use_from_same_package: error
    deprecated_member_use: error
    todo: ignore       # TODO не считаем ошибкой
    inference_failure_on_untyped_parameter: error
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.gen.dart"
    - "build/**"
    - ".dart_tool/**"

linter:
  rules:
    - always_declare_return_types
    - avoid_print
    - avoid_redundant_argument_values
    - avoid_returning_null
    - avoid_returning_this
    - cascade_invocations
    - directives_ordering
    - prefer_const_constructors
    - prefer_final_locals
    - prefer_final_in_for_each
    - sort_pub_dependencies
    - unawaited_futures
    - use_build_context_synchronously