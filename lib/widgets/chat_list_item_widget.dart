import 'package:flutter/material.dart';
import 'package:intl/intl.dart';

import '../models/enhanced_chat.dart';
import '../models/enhanced_message.dart';

/// –í–∏–¥–∂–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤
class ChatListItemWidget extends StatelessWidget {
  const ChatListItemWidget({
    super.key,
    required this.chat,
    this.onTap,
    this.onPin,
    this.onDelete,
  });
  final EnhancedChat chat;
  final VoidCallback? onTap;
  final VoidCallback? onPin;
  final VoidCallback? onDelete;

  @override
  Widget build(BuildContext context) => Card(
        margin: const EdgeInsets.only(bottom: 8),
        child: InkWell(
          onTap: onTap,
          borderRadius: BorderRadius.circular(12),
          child: Padding(
            padding: const EdgeInsets.all(16),
            child: Row(
              children: [
                // –ê–≤–∞—Ç–∞—Ä —Å –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–æ–º
                Stack(
                  children: [
                    CircleAvatar(
                      radius: 25,
                      backgroundImage:
                          chat.avatarUrl != null ? NetworkImage(chat.avatarUrl!) : null,
                      child: chat.avatarUrl == null
                          ? Text(
                              chat.name?.substring(0, 1).toUpperCase() ?? '?',
                            )
                          : null,
                    ),
                    if (chat.members.any((member) => member.isOnline))
                      Positioned(
                        bottom: 0,
                        right: 0,
                        child: Container(
                          width: 16,
                          height: 16,
                          decoration: BoxDecoration(
                            color: Colors.green,
                            shape: BoxShape.circle,
                            border: Border.all(color: Colors.white, width: 2),
                          ),
                        ),
                      ),
                  ],
                ),

                const SizedBox(width: 12),

                // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                Expanded(
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      // –ò–º—è –∏ –≤—Ä–µ–º—è
                      Row(
                        children: [
                          Expanded(
                            child: Text(
                              chat.name ?? '–ë–µ–∑ –∏–º–µ–Ω–∏',
                              style: const TextStyle(
                                fontSize: 16,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                          ),
                          Text(
                            chat.lastMessage != null
                                ? _formatTime(chat.lastMessage!.createdAt)
                                : '',
                            style: TextStyle(
                              color: Colors.grey[600],
                              fontSize: 12,
                            ),
                          ),
                        ],
                      ),

                      const SizedBox(height: 4),

                      // –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                      Row(
                        children: [
                          Expanded(
                            child: Text(
                              _getLastMessageText(),
                              style: TextStyle(
                                color: Colors.grey[600],
                                fontSize: 14,
                                fontWeight: FontWeight.normal,
                              ),
                              maxLines: 1,
                              overflow: TextOverflow.ellipsis,
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),

                // –î–µ–π—Å—Ç–≤–∏—è
                PopupMenuButton<String>(
                  onSelected: (value) {
                    switch (value) {
                      case 'pin':
                        onPin?.call();
                        break;
                      case 'delete':
                        onDelete?.call();
                        break;
                    }
                  },
                  itemBuilder: (context) => [
                    PopupMenuItem(
                      value: 'pin',
                      child: Row(
                        children: [
                          Icon(
                            chat.isPinned ? Icons.push_pin : Icons.push_pin_outlined,
                            size: 20,
                          ),
                          const SizedBox(width: 8),
                          Text(chat.isPinned ? '–û—Ç–∫—Ä–µ–ø–∏—Ç—å' : '–ó–∞–∫—Ä–µ–ø–∏—Ç—å'),
                        ],
                      ),
                    ),
                    const PopupMenuItem(
                      value: 'delete',
                      child: Row(
                        children: [
                          Icon(Icons.delete, size: 20, color: Colors.red),
                          SizedBox(width: 8),
                          Text('–£–¥–∞–ª–∏—Ç—å', style: TextStyle(color: Colors.red)),
                        ],
                      ),
                    ),
                  ],
                ),
              ],
            ),
          ),
        ),
      );

  String _getLastMessageText() {
    if (chat.lastMessage == null) {
      return '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π';
    }

    if (chat.lastMessage!.type == MessageType.text) {
      return chat.lastMessage!.text;
    } else if (chat.lastMessage!.type == MessageType.image) {
      return 'üì∑ –§–æ—Ç–æ';
    } else if (chat.lastMessage!.type == MessageType.video) {
      return 'üé• –í–∏–¥–µ–æ';
    } else if (chat.lastMessage!.type == MessageType.audio) {
      return 'üéµ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ';
    } else if (chat.lastMessage!.type == MessageType.document) {
      return 'üìÑ –î–æ–∫—É–º–µ–Ω—Ç';
    } else if (chat.lastMessage!.type == MessageType.location) {
      return 'üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ';
    } else if (chat.lastMessage!.type == MessageType.contact) {
      return 'üë§ –ö–æ–Ω—Ç–∞–∫—Ç';
    } else if (chat.lastMessage!.type == MessageType.sticker) {
      return 'üòä –°—Ç–∏–∫–µ—Ä';
    } else if (chat.lastMessage!.type == MessageType.system) {
      return '‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ';
    } else {
      return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è';
    }
  }

  String _formatTime(DateTime dateTime) {
    final now = DateTime.now();
    final difference = now.difference(dateTime);

    if (difference.inDays > 0) {
      return DateFormat('dd.MM').format(dateTime);
    } else if (difference.inHours > 0) {
      return '${difference.inHours}—á';
    } else if (difference.inMinutes > 0) {
      return '${difference.inMinutes}–º';
    } else {
      return '—Å–µ–π—á–∞—Å';
    }
  }
}
