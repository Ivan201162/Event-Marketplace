import 'package:flutter/material.dart';
import 'specialist_test_data.dart';

/// –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
void main() async {
  WidgetsFlutterBinding.ensureInitialized();

  print('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤...');

  try {
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
    print('üßπ –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...');
    await SpecialistTestData.clearTestData();

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    print('üìù –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤...');
    await SpecialistTestData.createTestSpecialists();

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print('üìä –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...');
    final stats = await SpecialistTestData.getTestDataStats();

    print('\n‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    print('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    print('   –í—Å–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤: ${stats['totalCount']}');
    print('   –°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: ${(stats['averageRating'] as double).toStringAsFixed(1)}');
    print('   –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: ${(stats['averagePrice'] as double).toInt()}‚ÇΩ');
    print('   –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: ${stats['verifiedCount']}');
    print('   –û–Ω–ª–∞–π–Ω: ${stats['onlineCount']}');

    print('\nüè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:');
    final categories = stats['categories'] as Map<String, int>;
    categories.forEach((category, count) {
      print('   $category: $count');
    });

    print('\nüèôÔ∏è –ì–æ—Ä–æ–¥–∞:');
    final cities = stats['cities'] as Map<String, int>;
    cities.forEach((city, count) {
      print('   $city: $count');
    });
  } catch (e) {
    print('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö: $e');
  }
}
