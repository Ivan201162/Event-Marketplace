/// –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∏–¥–µ–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
class EventIdeaCategory {
  const EventIdeaCategory({
    required this.id,
    required this.name,
    required this.emoji,
    this.description,
    this.color,
    this.isActive = true,
  });

  // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  static const List<EventIdeaCategory> values = [
    EventIdeaCategory(
      id: 'wedding',
      name: '–°–≤–∞–¥—å–±–∞',
      emoji: 'üíí',
      description: '–°–≤–∞–¥–µ–±–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
      color: '#FF69B4',
    ),
    EventIdeaCategory(
      id: 'corporate',
      name: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤',
      emoji: 'üè¢',
      description: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
      color: '#4169E1',
    ),
    EventIdeaCategory(
      id: 'birthday',
      name: '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
      emoji: 'üéÇ',
      description: '–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è',
      color: '#FFD700',
    ),
    EventIdeaCategory(
      id: 'anniversary',
      name: '–Æ–±–∏–ª–µ–π',
      emoji: 'üéâ',
      description: '–Æ–±–∏–ª–µ–π–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
      color: '#FF6347',
    ),
    EventIdeaCategory(
      id: 'graduation',
      name: '–í—ã–ø—É—Å–∫–Ω–æ–π',
      emoji: 'üéì',
      description: '–í—ã–ø—É—Å–∫–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
      color: '#32CD32',
    ),
    EventIdeaCategory(
      id: 'conference',
      name: '–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è',
      emoji: 'üìä',
      description: '–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –∏ —Å–µ–º–∏–Ω–∞—Ä—ã',
      color: '#9370DB',
    ),
    EventIdeaCategory(
      id: 'exhibition',
      name: '–í—ã—Å—Ç–∞–≤–∫–∞',
      emoji: 'üé®',
      description: '–í—ã—Å—Ç–∞–≤–∫–∏ –∏ —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏',
      color: '#FF8C00',
    ),
    EventIdeaCategory(
      id: 'festival',
      name: '–§–µ—Å—Ç–∏–≤–∞–ª—å',
      emoji: 'üé™',
      description: '–§–µ—Å—Ç–∏–≤–∞–ª–∏ –∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏',
      color: '#FF1493',
    ),
    EventIdeaCategory(
      id: 'sports',
      name: '–°–ø–æ—Ä—Ç',
      emoji: '‚öΩ',
      description: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
      color: '#00CED1',
    ),
    EventIdeaCategory(
      id: 'charity',
      name: '–ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
      emoji: '‚ù§Ô∏è',
      description: '–ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
      color: '#DC143C',
    ),
  ];

  /// –°–æ–∑–¥–∞—Ç—å –∏–∑ Map
  factory EventIdeaCategory.fromMap(Map<String, dynamic> data) => EventIdeaCategory(
        id: data['id']?.toString() ?? '',
        name: data['name']?.toString() ?? '',
        emoji: data['emoji']?.toString() ?? '',
        description: data['description']?.toString(),
        color: data['color']?.toString(),
        isActive: data['isActive'] != false,
      );

  final String id;
  final String name;
  final String emoji;
  final String? description;
  final String? color;
  final bool isActive;

  /// –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è
  String get displayName => name;

  /// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ Map
  Map<String, dynamic> toMap() => {
        'id': id,
        'name': name,
        'emoji': emoji,
        'description': description,
        'color': color,
        'isActive': isActive,
      };

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is EventIdeaCategory && other.id == id;
  }

  @override
  int get hashCode => id.hashCode;

  @override
  String toString() => 'EventIdeaCategory(id: $id, name: $name, emoji: $emoji)';
}
