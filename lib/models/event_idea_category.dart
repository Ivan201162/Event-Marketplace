import 'package:flutter/material.dart';

enum EventIdeaCategory {
  photography('photography', '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è', '–§–æ—Ç–æ—Å–µ—Å—Å–∏–∏ –∏ –ø–æ—Ä—Ç—Ä–µ—Ç—ã', 0xFF6366F1, 'üì∏'),
  videography('videography', '–í–∏–¥–µ–æ—Å—ä—ë–º–∫–∞', '–í–∏–¥–µ–æ—Ä–æ–ª–∏–∫–∏ –∏ –∫–ª–∏–ø—ã', 0xFF8B5CF6, 'üé•'),
  music('music', '–ú—É–∑—ã–∫–∞', '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è', 0xFFEC4899, 'üéµ'),
  dance('dance', '–¢–∞–Ω—Ü—ã', '–¢–∞–Ω—Ü–µ–≤–∞–ª—å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞', 0xFFF59E0B, 'üíÉ'),
  art('art', '–ò—Å–∫—É—Å—Å—Ç–≤–æ', '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã', 0xFF10B981, 'üé®'),
  design('design', '–î–∏–∑–∞–π–Ω', '–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏ –≤–µ–±-–¥–∏–∑–∞–π–Ω', 0xFF3B82F6, 'üé®'),
  fashion('fashion', '–ú–æ–¥–∞', '–ú–æ–¥–Ω—ã–µ –ø–æ–∫–∞–∑—ã –∏ —Å—Ç–∏–ª–∏–∑–∞—Ü–∏—è', 0xFFEF4444, 'üëó'),
  food('food', '–ö—É–ª–∏–Ω–∞—Ä–∏—è', '–ö—É–ª–∏–Ω–∞—Ä–Ω—ã–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã', 0xFFF97316, 'üç≥'),
  sports('sports', '–°–ø–æ—Ä—Ç', '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', 0xFF84CC16, '‚öΩ'),
  education('education', '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', '–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', 0xFF06B6D4, 'üìö'),
  technology('technology', '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', 'IT –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è', 0xFF6366F1, 'üíª'),
  business('business', '–ë–∏–∑–Ω–µ—Å', '–î–µ–ª–æ–≤—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', 0xFF6B7280, 'üíº'),
  health('health', '–ó–¥–æ—Ä–æ–≤—å–µ', '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∏ –æ–∑–¥–æ—Ä–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è', 0xFF10B981, 'üè•'),
  entertainment('entertainment', '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è', '–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', 0xFFEC4899, 'üé™'),
  other('other', '–î—Ä—É–≥–æ–µ', '–ü—Ä–æ—á–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', 0xFF9CA3AF, 'üìã');

  const EventIdeaCategory(this.id, this.name, this.description, this.color, this.icon);

  final String id;
  final String name;
  final String description;
  final Color color;
  final String icon;

  factory EventIdeaCategory.fromMap(Map<String, dynamic> map) {
    final id = map['id']?.toString() ?? '';
    return EventIdeaCategory.values.firstWhere(
      (category) => category.id == id,
      orElse: () => EventIdeaCategory.other,
    );
  }

  Map<String, dynamic> toMap() {
    return {'id': id, 'name': name, 'description': description, 'color': color.value, 'icon': icon};
  }

  String get displayName => name;
  String get emoji => icon;
}
