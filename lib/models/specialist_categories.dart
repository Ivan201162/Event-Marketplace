import 'package:flutter/material.dart';

/// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
class SpecialistCategoryInfo {
  const SpecialistCategoryInfo({
    required this.id,
    required this.name,
    required this.emoji,
    required this.description,
    required this.color,
    this.isPopular = false,
  });
  final String id;
  final String name;
  final String emoji;
  final String description;
  final Color color;
  final bool isPopular;

  /// –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  static const List<SpecialistCategoryInfo> popularCategories = [
    SpecialistCategoryInfo(
      id: 'host',
      name: '–í–µ–¥—É—â–∏–µ',
      emoji: 'üé§',
      description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–µ–¥—É—â–∏–µ –¥–ª—è –ª—é–±—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π',
      color: Color(0xFF2196F3),
      isPopular: true,
    ),
    SpecialistCategoryInfo(
      id: 'photographer',
      name: '–§–æ—Ç–æ–≥—Ä–∞—Ñ—ã',
      emoji: 'üì∏',
      description: '–°–≤–∞–¥–µ–±–Ω–∞—è, –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–∞—è –∏ —Å–æ–±—ã—Ç–∏–π–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è',
      color: Color(0xFF4CAF50),
      isPopular: true,
    ),
    SpecialistCategoryInfo(
      id: 'dj',
      name: '–î–∏–¥–∂–µ–∏',
      emoji: 'üéß',
      description: '–ú—É–∑—ã–∫–∞–ª—å–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π',
      color: Color(0xFF9C27B0),
      isPopular: true,
    ),
    SpecialistCategoryInfo(
      id: 'animator',
      name: '–ê–Ω–∏–º–∞—Ç–æ—Ä—ã',
      emoji: 'üé≠',
      description: '–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –¥–µ—Ç–µ–π –∏ –≤–∑—Ä–æ—Å–ª—ã—Ö',
      color: Color(0xFFFF9800),
      isPopular: true,
    ),
  ];

  /// –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
  static const List<SpecialistCategoryInfo> all = [
    // –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    SpecialistCategoryInfo(
      id: 'host',
      name: '–í–µ–¥—É—â–∏–µ',
      emoji: 'üé§',
      description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–µ–¥—É—â–∏–µ –¥–ª—è –ª—é–±—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π',
      color: Color(0xFF2196F3),
      isPopular: true,
    ),
    SpecialistCategoryInfo(
      id: 'photographer',
      name: '–§–æ—Ç–æ–≥—Ä–∞—Ñ—ã',
      emoji: 'üì∏',
      description: '–°–≤–∞–¥–µ–±–Ω–∞—è, –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–∞—è –∏ —Å–æ–±—ã—Ç–∏–π–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è',
      color: Color(0xFF4CAF50),
      isPopular: true,
    ),
    SpecialistCategoryInfo(
      id: 'dj',
      name: '–î–∏–¥–∂–µ–∏',
      emoji: 'üéß',
      description: '–ú—É–∑—ã–∫–∞–ª—å–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π',
      color: Color(0xFF9C27B0),
      isPopular: true,
    ),
    SpecialistCategoryInfo(
      id: 'animator',
      name: '–ê–Ω–∏–º–∞—Ç–æ—Ä—ã',
      emoji: 'üé≠',
      description: '–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –¥–µ—Ç–µ–π –∏ –≤–∑—Ä–æ—Å–ª—ã—Ö',
      color: Color(0xFFFF9800),
      isPopular: true,
    ),

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    SpecialistCategoryInfo(
      id: 'videographer',
      name: '–í–∏–¥–µ–æ–≥—Ä–∞—Ñ—ã',
      emoji: 'üé¨',
      description: '–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–æ–≤ –∏ —Ñ–∏–ª—å–º–æ–≤',
      color: Color(0xFF607D8B),
    ),
    SpecialistCategoryInfo(
      id: 'cover_band',
      name: '–ö–∞–≤–µ—Ä-–≥—Ä—É–ø–ø—ã',
      emoji: 'üé∏',
      description: '–ñ–∏–≤–∞—è –º—É–∑—ã–∫–∞ –∏ –∫–∞–≤–µ—Ä-–≥—Ä—É–ø–ø—ã',
      color: Color(0xFF795548),
    ),
    SpecialistCategoryInfo(
      id: 'musician',
      name: '–ú—É–∑—ã–∫–∞–Ω—Ç—ã',
      emoji: 'üéµ',
      description: '–°–æ–ª—å–Ω—ã–µ –º—É–∑—ã–∫–∞–Ω—Ç—ã –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–ª–∏—Å—Ç—ã',
      color: Color(0xFF3F51B5),
    ),
    SpecialistCategoryInfo(
      id: 'dancer',
      name: '–¢–∞–Ω—Ü–æ—Ä—ã',
      emoji: 'üíÉ',
      description: '–¢–∞–Ω—Ü–µ–≤–∞–ª—å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –∏ —à–æ—É',
      color: Color(0xFFE91E63),
    ),
    SpecialistCategoryInfo(
      id: 'content_creator',
      name: '–ö–æ–Ω—Ç–µ–Ω—Ç-–º–µ–π–∫–µ—Ä—ã',
      emoji: 'üì±',
      description: '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π',
      color: Color(0xFF00BCD4),
    ),
    SpecialistCategoryInfo(
      id: 'decorator',
      name: '–û—Ñ–æ—Ä–º–∏—Ç–µ–ª–∏/–î–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã',
      emoji: 'üé®',
      description: '–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π',
      color: Color(0xFFFF5722),
    ),
    SpecialistCategoryInfo(
      id: 'florist',
      name: '–§–ª–æ—Ä–∏—Å—Ç—ã',
      emoji: 'üå∏',
      description: '–¶–≤–µ—Ç–æ—á–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏ –±—É–∫–µ—Ç—ã',
      color: Color(0xFF8BC34A),
    ),
    SpecialistCategoryInfo(
      id: 'catering',
      name: '–ö–µ–π—Ç–µ—Ä–∏–Ω–≥',
      emoji: 'üçΩÔ∏è',
      description: '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö',
      color: Color(0xFFFFC107),
    ),
    SpecialistCategoryInfo(
      id: 'cleaning',
      name: '–ö–ª–∏–Ω–∏–Ω–≥',
      emoji: 'üßπ',
      description: '–£–±–æ—Ä–∫–∞ –¥–æ –∏ –ø–æ—Å–ª–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π',
      color: Color(0xFF9E9E9E),
    ),
    SpecialistCategoryInfo(
      id: 'fire_show',
      name: '–§–∞–µ—Ä-—à–æ—É/–°–≤–µ—Ç–æ–≤—ã–µ —à–æ—É/–°–∞–ª—é—Ç—ã',
      emoji: 'üî•',
      description: '–û–≥–Ω–µ–Ω–Ω—ã–µ –∏ —Å–≤–µ—Ç–æ–≤—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è',
      color: Color(0xFFFF6B35),
    ),
    SpecialistCategoryInfo(
      id: 'equipment_rental',
      name: '–ê—Ä–µ–Ω–¥–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
      emoji: 'üîß',
      description: '–ê—Ä–µ–Ω–¥–∞ –∑–≤—É–∫–æ–≤–æ–≥–æ –∏ —Å–≤–µ—Ç–æ–≤–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
      color: Color(0xFF455A64),
    ),
    SpecialistCategoryInfo(
      id: 'costume_rental',
      name: '–ê—Ä–µ–Ω–¥–∞ –ø–ª–∞—Ç—å–µ–≤/–ö–æ—Å—Ç—é–º–æ–≤',
      emoji: 'üëó',
      description: '–ê—Ä–µ–Ω–¥–∞ –Ω–∞—Ä—è–¥–æ–≤ –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π',
      color: Color(0xFF673AB7),
    ),
    SpecialistCategoryInfo(
      id: 'venue',
      name: '–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –∏ –ø–ª–æ—â–∞–¥–∫–∏',
      emoji: 'üèõÔ∏è',
      description: '–ê—Ä–µ–Ω–¥–∞ –∑–∞–ª–æ–≤ –∏ –ø–ª–æ—â–∞–¥–æ–∫ –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π',
      color: Color(0xFF009688),
    ),
    SpecialistCategoryInfo(
      id: 'event_organizer',
      name: '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π',
      emoji: 'üìã',
      description: '–ü–æ–ª–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –ø–æ–¥ –∫–ª—é—á',
      color: Color(0xFF1976D2),
    ),
    SpecialistCategoryInfo(
      id: 'photo_studio',
      name: '–§–æ—Ç–æ—Å—Ç—É–¥–∏–∏',
      emoji: 'üì∑',
      description: '–ê—Ä–µ–Ω–¥–∞ —Ñ–æ—Ç–æ—Å—Ç—É–¥–∏–π –¥–ª—è —Å—ä–µ–º–æ–∫',
      color: Color(0xFF5D4037),
    ),
    SpecialistCategoryInfo(
      id: 'teambuilding',
      name: '–¢–∏–º–±–∏–ª–¥–∏–Ω–≥ –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞',
      emoji: 'ü§ù',
      description: '–ö–æ–º–∞–Ω–¥–Ω—ã–µ –∏–≥—Ä—ã –∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
      color: Color(0xFF388E3C),
    ),
  ];

  /// –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ ID
  static SpecialistCategoryInfo? getById(String id) {
    try {
      return all.firstWhere((category) => category.id == id);
    } catch (e) {
      return null;
    }
  }

  /// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏
  static List<SpecialistCategoryInfo> getByPopularity(bool isPopular) =>
      all.where((category) => category.isPopular == isPopular).toList();

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is SpecialistCategoryInfo && other.id == id;
  }

  @override
  int get hashCode => id.hashCode;

  @override
  String toString() => 'SpecialistCategoryInfo(id: $id, name: $name)';
}
