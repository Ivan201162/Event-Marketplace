import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';

import 'analytics_service.dart';

/// –°–µ—Ä–≤–∏—Å –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á—ë—Ç–æ–≤ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
class WeeklyReportsService {
  factory WeeklyReportsService() => _instance;
  WeeklyReportsService._internal();
  static final WeeklyReportsService _instance =
      WeeklyReportsService._internal();

  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
  final FirebaseMessaging _messaging = FirebaseMessaging.instance;
  final FlutterLocalNotificationsPlugin _notifications =
      FlutterLocalNotificationsPlugin();
  final AnalyticsService _analyticsService = AnalyticsService();

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
  Future<void> initialize() async {
    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      const androidSettings =
          AndroidInitializationSettings('@mipmap/ic_launcher');
      const iosSettings = DarwinInitializationSettings();
      const initSettings = InitializationSettings(
        android: androidSettings,
        iOS: iosSettings,
      );

      await _notifications.initialize(initSettings);

      // –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
      await _messaging.requestPermission();

      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'WeeklyReportsService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    } on Exception {
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WeeklyReportsService: $e');
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á—ë—Ç–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É
  Future<void> sendSpecialistWeeklyReport(String specialistId) async {
    try {
      final stats = await _analyticsService.getUserStats(specialistId);
      if (stats == null) return;

      final views = (stats['views'] as int?) ?? 0;
      final requests = (stats['requests'] as int?) ?? 0;
      final messages = (stats['messages'] as int?) ?? 0;
      final likes = (stats['likes'] as int?) ?? 0;

      // –°–æ–∑–¥–∞—ë–º –æ—Ç—á—ë—Ç
      final report = {
        'userId': specialistId,
        'type': 'specialist_weekly',
        'views': views,
        'requests': requests,
        'messages': messages,
        'likes': likes,
        'weekStart': DateTime.now().subtract(const Duration(days: 7)),
        'weekEnd': DateTime.now(),
        'createdAt': FieldValue.serverTimestamp(),
      };

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á—ë—Ç –≤ Firestore
      await _firestore.collection('weekly_reports').add(report);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      await _sendSpecialistNotification(specialistId, views, requests);

      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É $specialistId');
    } on Exception {
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É: $e');
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á—ë—Ç–∞ –∑–∞–∫–∞–∑—á–∏–∫—É
  Future<void> sendCustomerWeeklyReport(String customerId) async {
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–∫–∞–∑—á–∏–∫–∞
      final requestsQuery = await _firestore
          .collection('analytics_events')
          .where('user_id', isEqualTo: customerId)
          .where('event_name', isEqualTo: 'create_request')
          .where(
            'timestamp',
            isGreaterThan: DateTime.now().subtract(const Duration(days: 7)),
          )
          .get();

      final totalRequests = requestsQuery.docs.length;

      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞—Ö –∑–∞—è–≤–æ–∫
      final viewedRequests = await _getViewedRequestsCount(customerId);

      // –°–æ–∑–¥–∞—ë–º –æ—Ç—á—ë—Ç
      final report = {
        'userId': customerId,
        'type': 'customer_weekly',
        'totalRequests': totalRequests,
        'viewedRequests': viewedRequests,
        'weekStart': DateTime.now().subtract(const Duration(days: 7)),
        'weekEnd': DateTime.now(),
        'createdAt': FieldValue.serverTimestamp(),
      };

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á—ë—Ç –≤ Firestore
      await _firestore.collection('weekly_reports').add(report);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      await _sendCustomerNotification(
        customerId,
        totalRequests,
        viewedRequests,
      );

      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–∫–∞–∑—á–∏–∫—É $customerId');
    } on Exception {
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞ –∑–∞–∫–∞–∑—á–∏–∫—É: $e');
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É
  Future<void> _sendSpecialistNotification(
    String specialistId,
    int views,
    int requests,
  ) async {
    try {
      const title = 'üìä –í–∞—à–∞ –Ω–µ–¥–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞';
      final body =
          '–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª–∏ $views —Ä–∞–∑, –ø–æ–ª—É—á–µ–Ω–æ $requests –∑–∞—è–≤–æ–∫';

      // –õ–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      await _notifications.show(
        specialistId.hashCode,
        title,
        body,
        const NotificationDetails(
          android: AndroidNotificationDetails(
            'weekly_reports',
            '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á—ë—Ç—ã',
            channelDescription: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ',
            importance: Importance.high,
            priority: Priority.high,
          ),
          iOS: DarwinNotificationDetails(),
        ),
      );

      // Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ FCM
      await _sendPushNotification(specialistId, title, body);
    } on Exception {
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É: $e');
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑—á–∏–∫—É
  Future<void> _sendCustomerNotification(
    String customerId,
    int totalRequests,
    int viewedRequests,
  ) async {
    try {
      const title = 'üìà –í–∞—à–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –Ω–µ–¥–µ–ª—é';
      final body =
          '–°–æ–∑–¥–∞–Ω–æ $totalRequests –∑–∞—è–≤–æ–∫, –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ $viewedRequests —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏';

      // –õ–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      await _notifications.show(
        customerId.hashCode,
        title,
        body,
        const NotificationDetails(
          android: AndroidNotificationDetails(
            'weekly_reports',
            '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á—ë—Ç—ã',
            channelDescription: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ',
            importance: Importance.high,
            priority: Priority.high,
          ),
          iOS: DarwinNotificationDetails(),
        ),
      );

      // Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ FCM
      await _sendPushNotification(customerId, title, body);
    } on Exception {
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑—á–∏–∫—É: $e');
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ FCM
  Future<void> _sendPushNotification(
    String userId,
    String title,
    String body,
  ) async {
    try {
      // –ü–æ–ª—É—á–∞–µ–º FCM —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      final userDoc = await _firestore.collection('users').doc(userId).get();
      final fcmToken = userDoc.data()?['fcmToken'] as String?;

      if (fcmToken == null) return;

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Cloud Functions
      await _firestore.collection('notifications').add({
        'userId': userId,
        'fcmToken': fcmToken,
        'title': title,
        'body': body,
        'type': 'weekly_report',
        'createdAt': FieldValue.serverTimestamp(),
      });
    } on Exception {
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: $e');
    }
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
  Future<int> _getViewedRequestsCount(String customerId) async {
    try {
      final requestsQuery = await _firestore
          .collection('requests')
          .where('customerId', isEqualTo: customerId)
          .where(
            'createdAt',
            isGreaterThan: DateTime.now().subtract(const Duration(days: 7)),
          )
          .get();

      var viewedCount = 0;
      for (final doc in requestsQuery.docs) {
        final data = doc.data();
        final views = data['views'] as int? ?? 0;
        viewedCount += views;
      }

      return viewedCount;
    } on Exception {
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫: $e');
      return 0;
    }
  }

  /// –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á—ë—Ç–æ–≤ –≤—Å–µ–º –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
  Future<void> sendWeeklyReportsToAllUsers() async {
    try {
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á—ë—Ç–æ–≤...');

      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      final usersQuery = await _firestore
          .collection('users')
          .where(
            'lastActiveAt',
            isGreaterThan: DateTime.now().subtract(const Duration(days: 30)),
          )
          .get();

      var specialistCount = 0;
      var customerCount = 0;

      for (final doc in usersQuery.docs) {
        final userData = doc.data();
        final userId = doc.id;
        final userRole = userData['role'] as String?;

        try {
          if (userRole == 'specialist') {
            await sendSpecialistWeeklyReport(userId);
            specialistCount++;
          } else if (userRole == 'customer') {
            await sendCustomerWeeklyReport(userId);
            customerCount++;
          }

          // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
          await Future.delayed(const Duration(milliseconds: 100));
        } on Exception {
          // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é $userId: $e');
        }
      }

      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á—ë—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã: $specialistCount —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º, $customerCount –∑–∞–∫–∞–∑—á–∏–∫–∞–º');
    } on Exception {
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–æ–≤: $e');
    }
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç—á—ë—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<List<Map<String, dynamic>>> getUserReportsHistory(
    String userId,
  ) async {
    try {
      final reportsQuery = await _firestore
          .collection('weekly_reports')
          .where('userId', isEqualTo: userId)
          .orderBy('createdAt', descending: true)
          .limit(10)
          .get();

      return reportsQuery.docs
          .map(
            (doc) => {
              'id': doc.id,
              ...doc.data(),
            },
          )
          .toList();
    } on Exception {
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç—á—ë—Ç–æ–≤: $e');
      return [];
    }
  }

  /// –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏-–æ—Ç—á—ë—Ç–∞ –∑–∞ 7 –¥–Ω–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
  Future<Map<String, dynamic>?> getMiniReport(String userId) async {
    try {
      final stats = await _analyticsService.getUserStats(userId);
      if (stats == null) return null;

      final views = (stats['views'] as int?) ?? 0;
      final requests = (stats['requests'] as int?) ?? 0;
      final messages = (stats['messages'] as int?) ?? 0;
      final likes = (stats['likes'] as int?) ?? 0;

      return {
        'views': views,
        'requests': requests,
        'messages': messages,
        'likes': likes,
        'period': '7 –¥–Ω–µ–π',
        'generatedAt': DateTime.now(),
      };
    } on Exception {
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–Ω–∏-–æ—Ç—á—ë—Ç–∞: $e');
      return null;
    }
  }

  /// –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á—ë—Ç–æ–≤ (–¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ Cloud Functions)
  Future<void> scheduleWeeklyReports() async {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏—Å—å –ª–∏ –æ—Ç—á—ë—Ç—ã –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ
      final lastReportQuery = await _firestore
          .collection('system_settings')
          .doc('weekly_reports')
          .get();

      final lastReportDate = lastReportQuery.data()?['lastSent'] as Timestamp?;
      final now = DateTime.now();

      if (lastReportDate != null) {
        final daysSinceLastReport =
            now.difference(lastReportDate.toDate()).inDays;
        if (daysSinceLastReport < 7) {
          // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–û—Ç—á—ë—Ç—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏—Å—å –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ');
          return;
        }
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á—ë—Ç—ã
      await sendWeeklyReportsToAllUsers();

      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
      await _firestore.collection('system_settings').doc('weekly_reports').set({
        'lastSent': FieldValue.serverTimestamp(),
        'lastSentDate': now.toIso8601String(),
      });

      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á—ë—Ç—ã –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã');
    } on Exception {
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:'–û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á—ë—Ç–æ–≤: $e');
    }
  }
}
