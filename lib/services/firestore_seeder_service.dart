import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/foundation.dart';

/// –°–µ—Ä–≤–∏—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ Firestore
class FirestoreSeederService {
  factory FirestoreSeederService() => _instance;
  FirestoreSeederService._internal();
  static final FirestoreSeederService _instance =
      FirestoreSeederService._internal();

  final FirebaseFirestore _firestore = FirebaseFirestore.instance;

  /// –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  Future<bool> seedTestData() async {
    try {
      debugPrint('üå± –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
      final now = DateTime.now();

      // Users (2 –∫–ª–∏–µ–Ω—Ç–∞, 2 —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞)
      debugPrint('üë• –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
      final users = [
        {
          'id': 'u_customer_1',
          'name': '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
          'city': '–ú–æ—Å–∫–≤–∞',
          'role': 'customer',
        },
        {
          'id': 'u_customer_2',
          'name': '–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
          'city': '–°–ü–±',
          'role': 'customer',
        },
        {
          'id': 'u_spec_1',
          'name': '–í–µ–¥—É—â–∏–π –ê—Ä—Ç—ë–º',
          'city': '–ú–æ—Å–∫–≤–∞',
          'role': 'specialist',
        },
        {
          'id': 'u_spec_2',
          'name': '–§–æ—Ç–æ–≥—Ä–∞—Ñ –ê–Ω–Ω–∞',
          'city': '–°–ü–±',
          'role': 'specialist',
        },
      ];

      for (final u in users) {
        await _firestore.collection('users').doc(u['id']).set(
          {
            'name': u['name'],
            'city': u['city'],
            'role': u['role'],
            'about': '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            'email': '${u['id']}@example.com',
            'phone': '+7 (999) 123-45-67',
            'avatar': 'https://picsum.photos/seed/${u['id']}/200/200',
            'createdAt': FieldValue.serverTimestamp(),
            'updatedAt': FieldValue.serverTimestamp(),
          },
          SetOptions(merge: true),
        );
        debugPrint('  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${u['name']} —Å–æ–∑–¥–∞–Ω');
      }

      // Ideas (—Ñ–æ—Ç–æ + –≤–∏–¥–µ–æ)
      debugPrint('üí° –°–æ–∑–¥–∞–Ω–∏–µ –∏–¥–µ–π...');
      final ideas = List.generate(
        6,
        (i) => {
          'title': '–ò–¥–µ—è #${i + 1}',
          'description':
              '–û–ø–∏—Å–∞–Ω–∏–µ –∏–¥–µ–∏ #${i + 1}. –≠—Ç–æ –æ—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è –¥–ª—è –≤–∞—à–µ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è!',
          'category': i.isEven ? '–§–æ—Ç–æ' : '–í–∏–¥–µ–æ',
          'isVideo': i.isOdd,
          'mediaUrl': i.isOdd
              ? 'https://samplelib.com/lib/preview/mp4/sample-5s.mp4'
              : 'https://picsum.photos/seed/idea${i + 1}/600/800',
          'authorId': i.isEven ? 'u_spec_1' : 'u_spec_2',
          'authorName': i.isEven ? '–í–µ–¥—É—â–∏–π –ê—Ä—Ç—ë–º' : '–§–æ—Ç–æ–≥—Ä–∞—Ñ –ê–Ω–Ω–∞',
          'authorAvatar': 'https://picsum.photos/seed/author${i + 1}/100/100',
          'likes': <String>[],
          'savedBy': <String>[],
          'tags': ['—Ç–µ—Å—Ç', '–∏–¥–µ—è', if (i.isEven) '—Ñ–æ—Ç–æ' else '–≤–∏–¥–µ–æ'],
          'isPublic': true,
          'likesCount': 0,
          'commentsCount': 0,
          'savesCount': 0,
          'sharesCount': 0,
          'createdAt': FieldValue.serverTimestamp(),
          'updatedAt': FieldValue.serverTimestamp(),
        },
      );

      for (var i = 0; i < ideas.length; i++) {
        final idea = ideas[i];
        final ref = await _firestore.collection('ideas').add(idea);
        debugPrint('  ‚úÖ –ò–¥–µ—è ${idea['title']} —Å–æ–∑–¥–∞–Ω–∞ —Å ID: ${ref.id}');

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∫–∞–∂–¥–æ–π –∏–¥–µ–µ
        await ref.collection('comments').add({
          'text': '–û—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è! –û—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å.',
          'authorId': 'u_customer_1',
          'authorName': '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
          'authorAvatar': 'https://picsum.photos/seed/user1/50/50',
          'createdAt': FieldValue.serverTimestamp(),
          'updatedAt': FieldValue.serverTimestamp(),
          'likesCount': 0,
          'likedBy': <String>[],
        });
        debugPrint('    üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–±–∞–≤–ª–µ–Ω');
      }

      // Chats (–æ–¥–∏–Ω —á–∞—Ç –∏ –ø–∞—Ä—É —Å–æ–æ–±—â–µ–Ω–∏–π)
      debugPrint('üí¨ –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–æ–≤...');
      final chatRef = _firestore.collection('chats').doc('c_demo_1');
      await chatRef.set({
        'members': ['u_customer_1', 'u_spec_1'],
        'lastMessage': '–î–æ–±—Ä—ã–π –¥–µ–Ω—å, —á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?',
        'updatedAt': FieldValue.serverTimestamp(),
        'createdAt': FieldValue.serverTimestamp(),
      });
      debugPrint('  ‚úÖ –ß–∞—Ç c_demo_1 —Å–æ–∑–¥–∞–Ω');

      // –°–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ
      await chatRef.collection('messages').add({
        'senderId': 'u_customer_1',
        'senderName': '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
        'type': 'text',
        'text': '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!',
        'sentAt': FieldValue.serverTimestamp(),
      });

      await chatRef.collection('messages').add({
        'senderId': 'u_spec_1',
        'senderName': '–í–µ–¥—É—â–∏–π –ê—Ä—Ç—ë–º',
        'type': 'text',
        'text': '–î–æ–±—Ä—ã–π –¥–µ–Ω—å, —á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?',
        'sentAt': FieldValue.serverTimestamp(),
      });
      debugPrint('  üí¨ 2 —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —á–∞—Ç');

      // Bookings (2 –∑–∞—è–≤–∫–∏)
      debugPrint('üìã –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫...');
      await _firestore.collection('bookings').add({
        'customerId': 'u_customer_1',
        'customerName': '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
        'specialistId': 'u_spec_1',
        'specialistName': '–í–µ–¥—É—â–∏–π –ê—Ä—Ç—ë–º',
        'eventTitle': '–°–≤–∞–¥—å–±–∞ –ò–≤–∞–Ω–∞ –∏ –ú–∞—Ä–∏–∏',
        'eventDate': Timestamp.fromDate(now.add(const Duration(days: 10))),
        'status': 'pending',
        'prepayment': 15000.0,
        'totalPrice': 50000.0,
        'message': '–•–æ—Ç–µ–ª–æ—Å—å –±—ã –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏ —Å–≤–∞–¥—å–±—ã',
        'participantsCount': 50,
        'address': '–ú–æ—Å–∫–≤–∞, —É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, 1',
        'createdAt': FieldValue.serverTimestamp(),
        'updatedAt': FieldValue.serverTimestamp(),
      });
      debugPrint('  ‚úÖ –ó–∞—è–≤–∫–∞ #1 —Å–æ–∑–¥–∞–Ω–∞ (–°–≤–∞–¥—å–±–∞)');

      await _firestore.collection('bookings').add({
        'customerId': 'u_customer_2',
        'customerName': '–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
        'specialistId': 'u_spec_2',
        'specialistName': '–§–æ—Ç–æ–≥—Ä–∞—Ñ –ê–Ω–Ω–∞',
        'eventTitle': '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –¥–æ—á–µ—Ä–∏',
        'eventDate': Timestamp.fromDate(now.add(const Duration(days: 20))),
        'status': 'confirmed',
        'prepayment': 20000.0,
        'totalPrice': 70000.0,
        'message': '–ù—É–∂–Ω–∞ —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è –¥–ª—è –¥–µ—Ç—Å–∫–æ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞',
        'participantsCount': 15,
        'address': '–°–ü–±, –ù–µ–≤—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç, 100',
        'createdAt': FieldValue.serverTimestamp(),
        'updatedAt': FieldValue.serverTimestamp(),
      });
      debugPrint('  ‚úÖ –ó–∞—è–≤–∫–∞ #2 —Å–æ–∑–¥–∞–Ω–∞ (–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è)');

      // Specialists (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤)
      debugPrint('üë®‚Äçüíº –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤...');
      await _firestore.collection('specialists').doc('u_spec_1').set(
        {
          'userId': 'u_spec_1',
          'name': '–í–µ–¥—É—â–∏–π –ê—Ä—Ç—ë–º',
          'category': '–í–µ–¥—É—â–∏–π',
          'city': '–ú–æ—Å–∫–≤–∞',
          'rating': 4.8,
          'reviewsCount': 25,
          'pricePerHour': 5000.0,
          'description':
              '–û–ø—ã—Ç–Ω—ã–π –≤–µ–¥—É—â–∏–π —Å 5-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º. –ü—Ä–æ–≤–æ–∂—É —Å–≤–∞–¥—å–±—ã, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤—ã, –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è.',
          'skills': ['–°–≤–∞–¥—å–±—ã', '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤—ã', '–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è'],
          'portfolio': [
            'https://picsum.photos/seed/portfolio1/300/200',
            'https://picsum.photos/seed/portfolio2/300/200',
            'https://picsum.photos/seed/portfolio3/300/200',
          ],
          'isAvailable': true,
          'createdAt': FieldValue.serverTimestamp(),
          'updatedAt': FieldValue.serverTimestamp(),
        },
        SetOptions(merge: true),
      );

      await _firestore.collection('specialists').doc('u_spec_2').set(
        {
          'userId': 'u_spec_2',
          'name': '–§–æ—Ç–æ–≥—Ä–∞—Ñ –ê–Ω–Ω–∞',
          'category': '–§–æ—Ç–æ–≥—Ä–∞—Ñ',
          'city': '–°–ü–±',
          'rating': 4.9,
          'reviewsCount': 40,
          'pricePerHour': 3000.0,
          'description':
              '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ —Å–≤–∞–¥–µ–±–Ω–æ–π –∏ —Å–µ–º–µ–π–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.',
          'skills': [
            '–°–≤–∞–¥–µ–±–Ω–∞—è —Ñ–æ—Ç–æ—Å—ä–µ–º–∫–∞',
            '–°–µ–º–µ–π–Ω–∞—è —Ñ–æ—Ç–æ—Å—ä–µ–º–∫–∞',
            '–î–µ—Ç—Å–∫–∞—è —Ñ–æ—Ç–æ—Å—ä–µ–º–∫–∞',
          ],
          'portfolio': [
            'https://picsum.photos/seed/photo1/300/200',
            'https://picsum.photos/seed/photo2/300/200',
            'https://picsum.photos/seed/photo3/300/200',
          ],
          'isAvailable': true,
          'createdAt': FieldValue.serverTimestamp(),
          'updatedAt': FieldValue.serverTimestamp(),
        },
        SetOptions(merge: true),
      );
      debugPrint('  ‚úÖ –ü—Ä–æ—Ñ–∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω—ã');

      debugPrint('‚úÖ Seeder: —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã');
      debugPrint('üìä –°–æ–∑–¥–∞–Ω–æ:');
      debugPrint('  - 4 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      debugPrint('  - 6 –∏–¥–µ–π —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏');
      debugPrint('  - 1 —á–∞—Ç —Å 2 —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏');
      debugPrint('  - 2 –∑–∞—è–≤–∫–∏');
      debugPrint('  - 2 –ø—Ä–æ—Ñ–∏–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤');

      return true;
    } catch (e) {
      debugPrint('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: $e');
      return false;
    }
  }

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  Future<bool> hasTestData() async {
    try {
      final ideasSnapshot = await _firestore.collection('ideas').limit(1).get();
      final chatsSnapshot = await _firestore.collection('chats').limit(1).get();
      final bookingsSnapshot =
          await _firestore.collection('bookings').limit(1).get();

      return ideasSnapshot.docs.isNotEmpty ||
          chatsSnapshot.docs.isNotEmpty ||
          bookingsSnapshot.docs.isNotEmpty;
    } catch (e) {
      debugPrint('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: $e');
      return false;
    }
  }
}

